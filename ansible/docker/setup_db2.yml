---
- name: Setup DB2 instance inside Docker container
  hosts: localhost
  connection: local
  become: false
  vars:
    container_name: db2

  tasks:
    - name: Wait for DB2 container to be running
      community.docker.docker_container_info:
        name: "{{ container_name }}"
      register: container_info
      until: container_info.container.State.Running
      retries: 10
      delay: 5

    - name: Run DB2 instance setup script
      ansible.builtin.command: >
        docker exec {{ container_name }} /var/db2_setup/lib/setup_db2_instance.sh

    - name: Start DB2 as db2inst1 user
      ansible.builtin.command: >
        docker exec {{ container_name }} su - db2inst1 -c 'db2start'

    - name: Connect to testdb
      ansible.builtin.command: >
        docker exec {{ container_name }} su - db2inst1 -c 'db2 connect to testdb'

    - name: Run init.sql inside container
      ansible.builtin.command: >
        docker exec {{ container_name }} su - db2inst1 -c 'db2 -tvf /docker-entrypoint-initdb.d/init.sql'

    - name: Healthcheck - ensure DB2 is available
      ansible.builtin.command: >
        docker exec {{ container_name }} su - db2inst1 -c 'db2 connect to testdb'
      register: healthcheck_result
      failed_when: healthcheck_result.rc != 0