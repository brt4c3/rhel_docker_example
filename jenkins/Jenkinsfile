pipeline {
    agent any

    parameters {
        booleanParam(name: 'check_podman_down', defaultValue: false, description: 'Tear down containers after run?')
    }

    environment {
        REPO_URL = "https://github.com/brt4c3/rhel_docker_example.git"
        REPO_NAME = "rhel_docker_example"
        REPO_DIR = "${REPO_NAME}_${BUILD_NUMBER}"
    }

    stages {
        stage('Check Internet Connectivity') {
            steps {
                script {
                    def connected = sh(script: "curl -sSf https://github.com > /dev/null", returnStatus: true)
                    if (connected != 0) {
                        error "No internet connection. Exiting."
                    }
                }
            }
        }

        stage('Clone Git Repository') {
            steps {
                sh """
                rm -rf ${REPO_DIR}
                git clone ${REPO_URL} ${REPO_DIR}
                """
            }
        }

        stage('Start Podman Compose (on local WSL Fedora)') {
            steps {
                dir("${REPO_DIR}") {
                    sh 'jenkins/podman-compose.sh up -d --build'
                }
            }
        }

        stage('Set up DB2') {
            steps {
                dir("${REPO_DIR}") {
                    sh 'ansible-playbook -i ansible/inventory ansible/setup_db2.yml'
                }
            }
        }

        stage('Set up OpenLiberty') {
            steps {
                dir("${REPO_DIR}") {
                    sh 'ansible-playbook -i ansible/inventory ansible/setup_ol_app.yml'
                }
            }
        }

        stage('Optional Tear Down') {
            when {
                expression { return params.check_podman_down == true }
            }
            steps {
                dir("${REPO_DIR}") {
                    sh '/usr/local/bin/podman-compose.sh down || true'
                }
            }
        }
    }

    post {
        always {
            script {
                dir("${REPO_DIR}") {
                    sh '/usr/local/bin/podman-compose.sh down || true'
                }
                sh 'podman ps -a || true'
                cleanWs()
            }
        }
    }
}
